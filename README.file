# Update 1 for March 7, 2022: So far, I have managed to read in the data correctly and process each student into a student object. Multiple student objects are added in the Class class. Next, I will start to build the algorithm in the Class class that actually sorts the students accordingly. 

# Update 2 for March 9, 2022: I was not in class, but I added more commits to the project from home. The updates that I made were that I gave the student class a toString method, did considerable amoung data processing to get the data into a usable shape for me to build my algorithms around. That data processing and toString are complete. Next, I will start implementing the sessions schdule, before doing the students, but I may want to create a algortihm that takes both session and student preferencess into account for opitmization purposes.

# Update 3 for March 17, 2022: Project completed today. I tried multiple optimizations, including a brute force method that searched all 30! ways to schedule the speakers, however, it was taking to long for the computer to run. For the brute force method, I actually ended up implmenting a recursive function to calculate all permuations of a 1d ArrayList. I also contemplated some other optimization ways, but ultimately decided to optimize by response time, since it seemed fair to give the perosn who answered first greater priorty in getting his or her choices over others (i.e. first come - first served basis). I implemented this approach, and when I found that some people would not be able to get all the chocies they wanted, I gave each student another unique session for them to attend, based on the first-come, first-served basis again. 
